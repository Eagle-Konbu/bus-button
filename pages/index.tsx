import { AppBar, Backdrop, Box, Button, CircularProgress, Tab, Tabs, Toolbar, Typography } from '@mui/material'
import type { NextPage } from 'next'
import Head from 'next/head'
import React, { useEffect } from 'react'
import BusButton from '../components/button'
import styles from '../styles/Home.module.css'

import useSound from 'use-sound'

import EmojiPeopleIcon from '@mui/icons-material/EmojiPeople';
import Groups2Icon from '@mui/icons-material/Groups2';
import Signal from '../components/signal'
import { io, Socket } from 'socket.io-client'
import { DefaultEventsMap } from 'socket.io/dist/typed-events'

interface TabPanelProps {
    children?: React.ReactNode;
    index: number;
    value: number;
}

const TabPanel = (props: TabPanelProps) => {
    const { children, value, index, ...other } = props;

    return (
        <div
            role="tabpanel"
            hidden={value !== index}
            id={`simple-tabpanel-${index}`}
            aria-labelledby={`simple-tab-${index}`}
            {...other}
        >
            {value === index && (
                <Box sx={{ p: 3 }}>
                    <Typography>{children}</Typography>
                </Box>
            )}
        </div>
    );
}

let socket: Socket<DefaultEventsMap, DefaultEventsMap>;

const Home: NextPage = () => {
    const [backdropShow, setBackdropShow] = React.useState(true);
    const [tabValue, setTabValue] = React.useState(0);
    const [isOn, setIsOn] = React.useState(false);

    const [play, _] = useSound('/ding-dong.mp3');

    const turnOn = (emit?: boolean) => {
        if (!isOn) {
            play();
            setIsOn(true);
            if (emit) {
                socket.emit('update-ison', true);
            }
        }
    };

    const turnOff = (emit?: boolean) => {
        if (isOn) {
            setIsOn(false);
            if (emit) {
                socket.emit('update-ison', false);
            }
        }
    };

    const socketInitializer = async () => {
        await fetch('api/socket');
        socket = io();

        socket.on('connect', () => {
            setBackdropShow(false);
            console.log('connected');
        });

        socket.on('update-ison', (newIsOn: boolean) => {
            console.log(`New isOn: ${newIsOn}`);
            if (newIsOn) {
                turnOn();
            } else {
                turnOff();
            }
        });
    }

    useEffect(() => {
        (async () => {
            await socketInitializer();
        })();
    }, []);

    return (
        <div className={styles.container}>
            <Head>
                <title>次止まります</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <AppBar>
                    <Toolbar>
                        <Typography variant="h6" component="div" sx={{ flexGrow: 1 }}>
                            次止まりますボタン
                        </Typography>
                        <Tabs value={tabValue} onChange={(_, newValue) => setTabValue(newValue)} textColor='inherit'>
                            <Tab icon={<Groups2Icon />} label="Audience" />
                            <Tab icon={<EmojiPeopleIcon />} label="Presenter" />
                        </Tabs>
                    </Toolbar>
                </AppBar>

                <TabPanel value={tabValue} index={0}>
                    <BusButton isOn={isOn} onClick={() => turnOn(true)} />
                </TabPanel>

                <TabPanel value={tabValue} index={1}>
                    <Signal isOn={isOn} />
                    <Button onClick={() => turnOff(true)} variant="contained" size="large" disabled={!isOn}>Reset</Button>
                </TabPanel>

                <Backdrop
                    sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}
                    open={backdropShow}
                >
                    <CircularProgress color="inherit" />
                </Backdrop>
            </main>
        </div>
    )
}

export default Home
